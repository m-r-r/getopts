var searchIndex = {};
searchIndex['getopts'] = {"items":[[0,"","getopts","Simple getopt alternative."],[1,"Opt","","A description of a possible option."],[11,"name","","Name of the option",0],[11,"hasarg","","Whether it has an argument",0],[11,"occur","","How often it can occur",0],[11,"aliases","","Which options it aliases",0],[1,"OptGroup","","One group of options, e.g., both `-h` and `--help`, along with\ntheir shared description and properties."],[11,"short_name","","Short name of the option, e.g. `h` for a `-h` option",1],[11,"long_name","","Long name of the option, e.g. `help` for a `--help` option",1],[11,"hint","","Hint for argument, e.g. `FILE` for a `-o FILE` option",1],[11,"desc","","Description for usage help text",1],[11,"hasarg","","Whether option has an argument",1],[11,"occur","","How often it can occur",1],[1,"Matches","","The result of checking command line arguments. Contains a vector\nof matches and a vector of free strings."],[11,"free","","Free string fragments",2],[2,"Name","","Name of an option. Either a string or a single char."],[12,"Long","","A string representing the long name of an option.\nFor example: \"help\"",3],[12,"Short","","A char representing the short name of an option.\nFor example: 'h'",3],[2,"HasArg","","Describes whether an option has an argument."],[12,"Yes","","The option requires an argument.",4],[12,"No","","The option takes no argument.",4],[12,"Maybe","","The option argument is optional.",4],[2,"Occur","","Describes how often an option may occur."],[12,"Req","","The option occurs once.",5],[12,"Optional","","The option occurs at most once.",5],[12,"Multi","","The option occurs zero or more times.",5],[2,"Fail","","The type returned when the command line does not conform to the\nexpected format. Use the `Show` implementation to output detailed\ninformation."],[12,"ArgumentMissing","","The option requires an argument but none was passed.",6],[12,"UnrecognizedOption","","The passed option is not declared among the possible options.",6],[12,"OptionMissing","","A required option is not present.",6],[12,"OptionDuplicated","","A single occurrence option is being used multiple times.",6],[12,"UnexpectedArgument","","There's an argument being passed to a non-argument option.",6],[2,"FailType","","The type of failure that occurred."],[12,"ArgumentMissing_","","",7],[12,"UnrecognizedOption_","","",7],[12,"OptionMissing_","","",7],[12,"OptionDuplicated_","","",7],[12,"UnexpectedArgument_","","",7],[3,"reqopt","","Create a long option that is required and takes an argument."],[3,"optopt","","Create a long option that is optional and takes an argument."],[3,"optflag","","Create a long option that is optional and does not take an argument."],[3,"optflagmulti","","Create a long option that can occur more than once and does not\ntake an argument."],[3,"optflagopt","","Create a long option that is optional and takes an optional argument."],[3,"optmulti","","Create a long option that is optional, takes an argument, and may occur\nmultiple times."],[3,"opt","","Create a generic option group, stating all parameters explicitly"],[3,"getopts","","Parse command line arguments according to the provided options."],[3,"usage","","Derive a usage message from a set of long options."],[3,"short_usage","","Derive a short one-line usage summary from a set of long options."],[4,"Result","","The result of parsing a command line with a set of options."],[10,"eq","","",3],[10,"ne","","",3],[10,"clone","","",3],[10,"eq","","",4],[10,"ne","","",4],[10,"clone","","",4],[10,"eq","","",5],[10,"ne","","",5],[10,"clone","","",5],[10,"eq","","",0],[10,"ne","","",0],[10,"clone","","",0],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"eq","","",2],[10,"ne","","",2],[10,"clone","","",2],[10,"eq","","",6],[10,"ne","","",6],[10,"clone","","",6],[10,"eq","","",7],[10,"ne","","",7],[10,"long_to_short","","Translate OptGroup into Opt.\n(Both short and long names correspond to different Opts).",1],[10,"opt_present","","Returns true if an option was matched.",2],[10,"opt_count","","Returns the number of times an option was matched.",2],[10,"opts_present","","Returns true if any of several options were matched.",2],[10,"opts_str","","Returns the string argument supplied to one of several matching options or `None`.",2],[10,"opt_strs","","Returns a vector of the arguments provided to all matches of the given\noption.",2],[10,"opt_str","","Returns the string argument supplied to a matching option or `None`.",2],[10,"opt_default","","Returns the matching string, a default, or none.",2],[10,"to_err_msg","","Convert a `Fail` enum into an error string.",6],[10,"fmt","","",6]],"paths":[[1,"Opt"],[1,"OptGroup"],[1,"Matches"],[2,"Name"],[2,"HasArg"],[2,"Occur"],[2,"Fail"],[2,"FailType"]]};
initSearch(searchIndex);
